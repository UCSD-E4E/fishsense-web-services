server {
    listen 80;
    server_name api;

    # Authentik Outpost location
    location /outpost.goauthentik.io/ {
        proxy_pass https://auth.fabricant.ucsd.edu/outpost.goauthentik.io/; # Adjust port if necessary
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_ssl_server_name on;
    }
    
    # location / {
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-NginX-Proxy true;
    #     proxy_pass http://fishsense_data_processing_spider:80;
    #     proxy_ssl_session_reuse off;
    #     proxy_set_header Host $http_host;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_redirect off;
    # }

    location /temporal {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://fishsense_temporal-ui:8080/temporal;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
    }

    location /api/v1/data {
        alias /data;
        add_header 'Access-Control-Allow-Origin' 'https://labeler.e4e.ucsd.edu';
    }

    location /api/v1/data/raw {
        auth_request /outpost.goauthentik.io/auth/nginx;
        error_page 401 = /outpost.goauthentik.io/start?rd=$scheme://$http_host$request_uri;
        auth_request_set $authentik_username $upstream_http_x_authentik_username;
        auth_request_set $authentik_email $upstream_http_x_authentik_email;
        auth_request_set $authentik_name $upstream_http_x_authentik_name;
        # Set headers for the application to use
        proxy_set_header X-authentik-username $authentik_username;
        proxy_set_header X-authentik-email $authentik_email;
        proxy_set_header X-authentik-name $authentik_name;
        # Serve static files from the specified root directory
        # root /path/to/your/static/files;
        # Ensure Nginx can serve files directly from the root for this location
        try_files $uri $uri/ =404;
    }

    # Laser
    location ~ ^/api/v1/data/preprocess_jpeg/\w+$ {
        rewrite /api/v1/data/preprocess_jpeg/(.*) /api/v1/data/preprocess_jpeg/$1.JPG;
    }

    # Head/Tail
    location /api/v1/data/laser_jpeg {
        rewrite /api/v1/data/laser_jpeg/(.*) /api/v1/data/preprocess_laser_jpeg/$1.JPG;
    }
}